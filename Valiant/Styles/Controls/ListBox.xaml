<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Storyboard x:Key="ListBoxRemoved">
        <DoubleAnimation
            Storyboard.TargetProperty="(Grid.RenderTransform).(TranslateTransform.X)"
            Duration="0:0:0.3"
            To="-24">
            <DoubleAnimation.EasingFunction>
                <CubicEase EasingMode="EaseInOut" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation
            Storyboard.TargetProperty="Opacity"
            Duration="0:0:0.25"
            To="0">
            <DoubleAnimation.EasingFunction>
                <CubicEase EasingMode="EaseInOut" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>

    <Style x:Key="VerticalTransparentListBox" TargetType="{x:Type ListBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ScrollViewer>
                        <StackPanel Orientation="Vertical" IsItemsHost="True" />
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalTransparentListBox" TargetType="{x:Type ListBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ScrollViewer Style="{DynamicResource ScrollViewerCompactTop}">
                        <StackPanel Orientation="Horizontal" IsItemsHost="True" />
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabbedListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource TextDarkBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource Poppins}" />
        <Setter Property="Margin" Value="1, 0" />
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="False"/>
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="None"/>
        <Setter Property="KeyboardNavigation.ControlTabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid x:Name="Gr" Opacity="0" RenderTransformOrigin="0, 0.5">
                        <Border
                            x:Name="Bd"
                            Background="Transparent"
                            CornerRadius="6, 6, 0, 0"
                            SnapsToDevicePixels="true" />
                        <Border
                            x:Name="indicator"
                            Background="{DynamicResource AccentSecondaryBrush}"
                            Opacity="0.25"
                            Height="2"
                            VerticalAlignment="Bottom"
                            RenderTransformOrigin="0.5, 1">
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="indicatorScale" ScaleX="0" />
                            </Border.RenderTransform>
                        </Border>
                        <Border
                            x:Name="indicatorSelected"
                            Background="{DynamicResource AccentSecondaryBrush}"
                            Opacity="0.25"
                            Margin="0, 0, 0, 2"
                            CornerRadius="6, 6, 0, 0"
                            VerticalAlignment="Stretch"
                            RenderTransformOrigin="0.5, 1">
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="indicatorSelectedScale" ScaleY="0" />
                            </Border.RenderTransform>
                        </Border>
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Stretch"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid.RenderTransform>
                            <TranslateTransform X="-12" Y="0" />
                        </Grid.RenderTransform>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="Gr"
                                        Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)"
                                        Duration="0:0:0.3"
                                        To="0">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseInOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation
                                        Storyboard.TargetName="Gr"
                                        Storyboard.TargetProperty="Opacity"
                                        Duration="0:0:0.25"
                                        To="1">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseInOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ControlMediumBrush}" />

                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="indicatorScale"
                                            Storyboard.TargetProperty="ScaleX"
                                            Duration="0:0:0.25"
                                            To="1">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="indicatorScale"
                                            Storyboard.TargetProperty="ScaleX"
                                            Duration="0:0:0.25"
                                            To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource TextLightBrush}" />
                            <Setter TargetName="indicator" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1" />
                                </Setter.Value>
                            </Setter>

                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="indicatorSelectedScale"
                                            Storyboard.TargetProperty="ScaleY"
                                            Duration="0:0:0.25"
                                            To="1">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="indicatorSelectedScale"
                                            Storyboard.TargetProperty="ScaleY"
                                            Duration="0:0:0.25"
                                            To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource TextDarkBrush}" />
        <Setter Property="Margin" Value="0, 0, 0, 8" />
        <Setter Property="Padding" Value="24, 8, 0, 8"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="False"/>
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="None"/>
        <Setter Property="KeyboardNavigation.ControlTabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                        x:Name="Bd"
                        Background="Transparent"
                        CornerRadius="16" SnapsToDevicePixels="true">
                        <Grid>
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Stretch"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="Stretch" />
                            <Border x:Name="indicator" Background="{DynamicResource AccentPrimaryBrush}" Height="16" Width="4" CornerRadius="2" Margin="8, 0, 0, 0" HorizontalAlignment="Left" VerticalAlignment="Center" RenderTransformOrigin="0.5, 0.5">
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="indicatorScale" ScaleX="1" ScaleY="0" />
                                </Border.RenderTransform>
                            </Border>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ControlMediumBrush}" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ControlDarkerBrush}" />
                            <Setter TargetName="indicator" Property="RenderTransformOrigin" Value="0, 0.5" />

                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="indicatorScale"
                                            Storyboard.TargetProperty="ScaleY"
                                            Duration="0:0:0.25"
                                            To="1">
                                            <DoubleAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="indicatorScale"
                                            Storyboard.TargetProperty="ScaleY"
                                            Duration="0:0:0.25"
                                            To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>